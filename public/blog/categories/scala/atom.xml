<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: scala | Dao De Code]]></title>
  <link href="http://daodecode.com/blog/categories/scala/atom.xml" rel="self"/>
  <link href="http://daodecode.com/"/>
  <updated>2013-02-28T23:56:06-05:00</updated>
  <id>http://daodecode.com/</id>
  <author>
    <name><![CDATA[Eugene Platonov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Camel and Scala 2.10]]></title>
    <link href="http://daodecode.com/blog/2013/02/28/camel-and-scala-2-dot-10/"/>
    <updated>2013-02-28T23:33:00-05:00</updated>
    <id>http://daodecode.com/blog/2013/02/28/camel-and-scala-2-dot-10</id>
    <content type="html"><![CDATA[<p><a href="http://camel.apache.org/">Camel</a> and <a href="http://www.scala-lang.org/">Scala</a> is a good combination,
but if you like to be on the bleeding edge and almost done converting your scala app to <a href="http://www.scala-lang.org/node/27499">2.10</a>
you can find that camel still doesn't have a stable release supporting scala 2.10.
So SNAPSHOT will do the trick in this case, but you know... it's a SNAPSHOT :)<br/>
All you need is apache snapshots repo and camel-scala 2.11-SNAPSHOT</p>

<p>``` scala
resolvers += "Apache Snapshots" at "http://repository.apache.org/snapshots/"</p>

<p>libraryDependencies += "org.apache.camel" % "camel-scala" % "2.11-SNAPSHOT"
```
Add those to your sbt build and you are all set.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Root Application Context in Play 2.1]]></title>
    <link href="http://daodecode.com/blog/2013/02/23/root-application-context-in-play-2-dot-1/"/>
    <updated>2013-02-23T17:34:00-05:00</updated>
    <id>http://daodecode.com/blog/2013/02/23/root-application-context-in-play-2-dot-1</id>
    <content type="html"><![CDATA[<p>So <a href="http://www.playframework.com/">Play 2.1</a> is officialy out and one of the new features it brings is the ability
to configure root application context. It have been in <a href="https://github.com/playframework/Play20/commit/da6bbc4">2.1 branch</a>
 for a long-long time and I don't see this mentioned in
<a href="http://www.playframework.com/documentation/2.1.0/Highlights">highlights section</a>, but nevertheless it's there and it works.
To assign a root context to your play app just open your <code>application.conf</code> file and add the following line
<code>
application.context=/my_root_context
</code>
Make sure you have it starting with slash (<code>/</code>)
otherwise play will throw a configuration error at you saying "Invalid application context".</p>
]]></content>
  </entry>
  
</feed>
